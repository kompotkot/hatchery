---
- name: Install git server with bugout monitor
  hosts: machines
  remote_user: ubuntu
  vars:
    git_ssh_public_key: ""
  vars_prompt:
    - name: git_user_password
      prompt: "Type git user password"
    - name: bugout_token
      prompt: "Type bugout token"
    - name: bugout_journal_id
      prompt: "Type bugout journal id"
      private: no
    - name: bugout_entry_id
      prompt: "Type bugout entry id for common git server status"
      private: no
  tasks:
    - name: Update and upgrade apt packages
      become: yes
      apt:
        update_cache: yes
        upgrade: yes
    - name: Install required packages
      become: yes
      apt:
        name:
          - git
          - jq
          - zip
          - unzip
    # Prepare git server
    - name: Add git user
      become: yes
      user:
        name: git
        password: "{{ git_user_password | password_hash('sha512') }}"
        shell: /usr/bin/git-shell
    - name: Create .ssh repo for git user
      become: yes
      become_user: git
      file:
        path: /home/git/.ssh
        state: directory
        mode: 0700
    - name: Add git SSH authorized public key
      become: yes
      become_user: git
      authorized_key:
        user: git
        key: "{{ lookup('file', git_ssh_public_key) }}"
        state: present
    - name: Prepare git repository
      become: yes
      file:
        path: /srv/git
        state: directory
        owner: git
        group: git
        mode: 0700
    - name: Dissalow ssh forwarding for git user
      become: yes
      replace:
        path: /home/git/.ssh/authorized_keys
        regexp: 'ssh-rsa'
        replace: 'no-port-forwarding,no-X11-forwarding,no-agent-forwarding,no-pty ssh-rsa'
    # Install bugout
    - name: Create playbook state directory
      file:
        path: /tmp/setup_state
        state: directory
    - name: Download Bugout Go
      become: yes
      get_url:
        url: https://github.com/bugout-dev/bugout-go/releases/download/v0.3.2/bugout-linux-amd64.zip
        dest: /tmp/setup_state/bugout.zip
    - name: Unzip bugout
      become: yes
      unarchive:
        src: /tmp/setup_state/bugout.zip
        remote_src: yes
        dest: /tmp/setup_state
        extra_opts: -j
    - name: Copy bugout to /usr/local/bin/bugout
      become: yes
      copy:
        src: /tmp/setup_state/bugout
        dest: /usr/local/bin/bugout
        remote_src: yes
        mode: a+x
    - name: Recursively remove playbook state directory
      file:
        path: /tmp/setup_state
        state: absent
    # Prepare gitmonitor script and environment files
    - name: Create gitmonitor directory
      become: yes
      file:
        path: /etc/gitmonitor
        state: directory
    - name: Copy gitmonitor.bash file
      become: yes
      copy:
        src: files/gitmonitor.bash
        dest: /etc/gitmonitor/gitmonitor.bash
        mode: 0740
    - name: Copy .env file
      become: yes
      copy:
        src: files/.env
        dest: /etc/gitmonitor/.env
        mode: 0640
    - name: Replace BUGOUT_GITMONITOR_TOKEN in .env
      become: yes
      lineinfile:
        path: /etc/gitmonitor/.env
        regexp: 'BUGOUT_GITMONITOR_TOKEN=""'
        line: 'BUGOUT_GITMONITOR_TOKEN="{{ bugout_token }}"'
    - name: Replace BUGOUT_GITMONITOR_JOURNAL_ID in .env
      become: yes
      lineinfile:
        path: /etc/gitmonitor/.env
        regexp: 'BUGOUT_GITMONITOR_JOURNAL_ID=""'
        line: 'BUGOUT_GITMONITOR_JOURNAL_ID="{{ bugout_journal_id }}"'
    - name: Replace BUGOUT_GITMONITOR_ENTRY_ID in .env
      become: yes
      lineinfile:
        path: /etc/gitmonitor/.env
        regexp: 'BUGOUT_GITMONITOR_ENTRY_ID=""'
        line: 'BUGOUT_GITMONITOR_ENTRY_ID="{{ bugout_entry_id }}"'
    # Prepare gitmonitor service
    - name: Copy gitmonitor.service file
      become: yes
      copy:
        src: files/gitmonitor.service
        dest: /etc/systemd/system/gitmonitor.service
        mode: 644
    - name: Copy gitmonitor.path file
      become: yes
      copy:
        src: files/gitmonitor.path
        dest: /etc/systemd/system/gitmonitor.path
        mode: 644
    - name: Copy gitmonitor.timer file
      become: yes
      copy:
        src: files/gitmonitor.timer
        dest: /etc/systemd/system/gitmonitor.timer
        mode: 644
    - name: Restart path, also issue daemon-reload to pick up config changes
      become: yes
      systemd:
        state: restarted
        enabled: yes
        daemon_reload: yes
        name: gitmonitor.path
    - name: Restart timer, also issue daemon-reload to pick up config changes
      become: yes
      systemd:
        state: restarted
        enabled: yes
        name: gitmonitor.timer
